.\" -*- mode: nroff; coding: utf-8 -*-
.\" Copyright (c) 2022 Gwen Weinholt
.\" SPDX-License-Identifier: MIT
.TH bytevector->string 3scm 2020-05-14 "" "Scheme Programmer's Manual"
.SH NAME
bytevector->string \- transcode a bytevector to a string
.
.SH LIBRARY
.nf
.BR "(import (rnrs))" "                     ;R6RS"
.BR "(import (rnrs io ports))" "            ;R6RS"
.
.SH SYNOPSIS
.nf
.BI "(bytevector->string " bytevector " " transcoder )
.
.SH DESCRIPTION
Returns the string that results from transcoding
.I bytevector
according to the input direction of
.IR transcoder .
.
\" .SH "IMPLEMENTATION NOTES"
\" .
.SH "RETURN VALUES"
.
Returns a single value; a string.
.SH EXAMPLES
.
.EX
(bytevector->string #vu8(81 117 117 120) (native-transcoder))
        => "Quux"

(bytevector->string #vu8(#xff)
                    (make-transcoder (utf-8-codec)
                                     (native-eol-style)
                                     (error-handling-mode raise)))
        => &i/o-decoding
.EE
.
.SH "APPLICATION USAGE"
.
This procedure is a more general alternative to
.BR utf8->string (3scm).
\" .SH RATIONALE
\" .
.SH COMPATIBILITY
.
This procedure is unique to R6RS.
.SH ERRORS
This procedure can raise exceptions with the following condition types:
.TP
.BR &assertion " (R6RS)"
The wrong number of arguments was passed or an argument was outside its domain.
.TP
.BR &i/o-decoding " (R6RS)"
A sequence of bytes was encountered that could not be translated into
a string, and
.IR transcoder 's
error-handling-mode is \f[CR]raise\fP.
.
.SH "SEE ALSO"
.
.BR string->bytevctor (3scm),
.BR utf8->string (3scm),
.BR open-bytevector-output-port (3scm),
.BR make-transcoder (3scm)
.SH STANDARDS
R6RS
.
.SH HISTORY
.
This procedure first appeared in R6RS as part of the redesigned I/O
system.
.SH AUTHORS
This page is part of the
.I scheme-manpages
project.
It includes materials from the RnRS documents.
More information can be found at
.UR https://github.com/schemedoc/manpages/
.UE .
\" .
\" .SH BUGS
\" .
