.\" -*- mode: nroff; coding: utf-8 -*-
.\" Copyright © 2021 Göran Weinholt
.\" SPDX-License-Identifier: MIT
.TH bytevector->u8-list 3scm 2021-02-28 "" "Scheme Programmer's Manual"
.SH NAME
bytevector->u8-list, bytevector->sint-list, bytevector->uint-list \- convert a bytevector to a list of integers
.
.SH LIBRARY
.nf
.BR "(import (rnrs))" "                     ;R6RS"
.BR "(import (rnrs bytevectors))" "         ;R6RS"
.
.SH SYNOPSIS
.nf
.BI "(bytevector->u8-list " bytevector )
.BI "(bytevector->sint-list " bytevector " " endianness " " size )
.BI "(bytevector->uint-list " bytevector " " endianness " " size )
.
.SH DESCRIPTION
These procedures convert a bytevector to a list of integer objects
according to
.I size
and
.IR endianness .
The integers have the same order as the data in
.IR bytevector .
.PP
The
.B bytevector->u8-list
procedure is the same as
.B bytevector->uint-list
with a size of 1. It returns a newly allocated list of the octets
of
.I bytevector
in the same order.
.
\" .SH "IMPLEMENTATION NOTES"
\" .
.SH "RETURN VALUES"
.
Returns a newly allocated list of exact integer objects.
.SH EXAMPLES
.
.EX
(let ((b (make-bytevector 4 -127)))
  (bytevector->u8-list b))
          => #vu8(129 129 129 129)

(let ([b (u8-list->bytevector
           '(#x1 #x2 #x3 #xFF #x1 #x2 #x1 #x2))])
  (bytevector->sint-list b (endianness little) #x2))
          => (#x201 #x-FD #x201 #x201)

(let ([b (u8-list->bytevector
           '(#x1 #x2 #x3 #xFF #x1 #x2 #x1 #x2))])
  (bytevector->uint-list b (endianness little) #x2))
          => (#x201 #xFF03 #x201 #x201)
.EE
.
\" .SH "APPLICATION USAGE"
\" .
\" .SH RATIONALE
\" .
\" .SH COMPATIBILITY
\" .
.SH ERRORS
This procedure can raise exceptions with the following condition types:
.TP
.BR &assertion " (R6RS)"
The wrong number of arguments was passed or an argument was outside its domain.
In particular,
.I size
must be a positive exact integer object and
.I bytevector
must be evenly divisible by
.IR size .
.
.SH "SEE ALSO"
.
.BR endianness (7scheme),
.BR u8-list->bytevector (3scm)
.SH STANDARDS
R6RS
.
\" .SH HISTORY
\" .
.SH AUTHORS
This page is part of the
.I scheme-manpages
project.
It includes materials from the RnRS documents.
More information can be found at
.UR https://github.com/schemedoc/manpages/
.UE .
\" .
\" .SH BUGS
\" .
