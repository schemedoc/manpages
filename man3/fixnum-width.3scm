.\" -*- mode: nroff; coding: utf-8 -*-
.\" Copyright © 2021 Göran Weinholt
.\" SPDX-License-Identifier: MIT
.TH fixnum-width 3scm 2023-01-06 "" "Scheme Programmer's Manual"
.SH NAME
fixnum-width, least-fixnum, greatest-fixnum \- query the fixnum range
.
.SH LIBRARY
.nf
.BR "(import (rnrs))" "                     ;R6RS"
.BR "(import (rnrs arithmetic fixnums))" "  ;R6RS"
.
.SH SYNOPSIS
.nf
.BI (fixnum-width)
.BI (least-fixnum)
.BI (greatest-fixnum)
.
.SH DESCRIPTION
The fixnum range is defined as the closed interval
[−2^(\fIw\fP−1), 2^(\fIw\fP−1)−1]
such that \fIw\fP is an implementation-defined integer \fIw\fP ≥ 24.
The
.B fixnum-width
procedure returns the implementation's \fIw\fP.
The
.B least-fixnum
procedure returns −2^(\fIw\fP−1).
The
.B greatest-fixnum
procedure returns 2^(\fIw\fP−1)−1.
.PP
The fixnum range is important to consider when using the fixnum
procedures because these procedures require that their arguments and
results are fixnums. They raise an exception when a result cannot be
represented as a fixnum.
.
.SH "IMPLEMENTATION NOTES"
.
The fixnum width depends very much on implementation details and the
machine. Here are some known fixnum widths.
.TP
.IP "Chez Scheme"
The fixnum width is 61 or 30. If the machine's register width is
\fIm\fP then the fixnum width is \fIm\fP - log2(\fIm\fP/8).
.IP "GNU Guile"
The fixnum width is 62 or 30. This is the machine's register width
minus two.
.IP "IronScheme"
The fixnum width is 32.
.IP "Loko Scheme"
The fixnum width is 61.
.SH "RETURN VALUES"
.
These procedures each return a single value; a fixnum as per the
description above.
.
.SH EXAMPLES
.
.PP
.EX
; The results are different for different implementations.
(fixnum-width)     =>  61
(least-fixnum)     => -1152921504606846976
(greatest-fixnum)  =>  1152921504606846975
.EE
.
.SH "APPLICATION USAGE"
.
This procedure is sometimes used in libraries that provide optimized
variants of code for implementations where the fixnum width is large
enough.
.
If the fixnum width is 32 (or greater) then fixnums can represent all
signed 32-bit integers.
\" .SH RATIONALE
\" .
.SH COMPATIBILITY
.
This procedure is only present in R6RS. An alternative to
\f[CR](fixnum-width)\fP is \f[CR](+ 1 (bitwise-length
(greatest-fixnum)))\fP. But normally there is no need to use fixnum
procedures if they are not available; generic arithmetic can be used
instead and will give the same results.
.
.SH ERRORS
This procedure can raise exceptions with the following condition types:
.TP
.BR &assertion " (R6RS)"
The wrong number of arguments was passed.
.
.SH "SEE ALSO"
.
.BR bitwise-length (3scm)
.
.SH STANDARDS
R6RS
.
.SH HISTORY
.
These procedures are new to the fixnum library in R6RS.
Implementations have always had some kind of fixnum type but was
normally not seen by the user.
.
.SH AUTHORS
This page is part of the
.I scheme-manpages
project.
It includes materials from the RnRS documents.
More information can be found at
.UR https://github.com/schemedoc/manpages/
.UE .
\" .
\" .SH BUGS
\" .
