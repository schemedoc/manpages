.\" -*- mode: nroff; coding: utf-8 -*-
.\" Copyright © 2021 Göran Weinholt
.\" SPDX-License-Identifier: MIT
.TH for-all 3scm 2021-07-23 "" "Scheme Programmer's Manual"
.SH NAME
for-all, exists \- apply a predicate to lists of objects
.
.SH LIBRARY
.nf
.BR "(import (rnrs))" "                     ;R6RS"
.BR "(import (rnrs lists))" "               ;R6RS"
.
.SH SYNOPSIS
.nf
.BI "(for-all " proc " " list "" " ..." )
.BI "(exists "  proc " " list "" " ..." )
.
.SH DESCRIPTION
These procedures apply
.I proc
to the elements of the lists. They start with the first
elements of each list, then the second elements, etc. The
.B for-all
procedure stops when
.I proc
returns
.BR #f ,
and the
.B exists
procedure stops when
.I proc
returns a true value.
.PP
If iteration
stops because
.I proc
returns
.B #f
(for
.BR for-all )
or
a true value
(for
.BR exists )
then that value is returned. Otherwise the return value is as
described in the next two points:
.
.TP
.B Empty lists
If the lists are all empty then
.B for-all
returns
.B #t
and
.B exists
returns
.BR #f .
.
.TP
.B Tail calls
If these procedures reach the last elements of the lists then they
perform a tail call of
.I proc
on the last element of each list.
.
.TP
.B Dynamic environment
.I Proc
is always called in the same dynamic environment as
.B for-all
or
.B exists
itself. This generally means there is no internal state in the
procedure that would get messed up if there are multiple returns from
.IR proc .
.TP
.B Matching lengths and arguments
The lists should all have the same length, and
.I proc
should accept as many arguments as there are lists, and return a
single value.
.I Proc
should not mutate the list arguments.
.IP
The implementation must check that the lists are chains of pairs only
to the extent necessary to determine the return value.
.
\" .SH "IMPLEMENTATION NOTES"
\" .
\" The implementation must check the restrictions on proc
\" to the extent performed by applying it as described. An implementation
\" may check whether proc is an appropriate argument before applying it.
.SH "RETURN VALUES"
.
These procedures return a single value, which is either a true value
returned by
.IR proc ,
or
.BR #f .
.PP
A special case is when
.I proc
is tail called on the last elements of the lists, in which case whatever
.I proc
returns will returned. Depending on the implementation, it may be
possible for multiple values to be returned, but this should not be
relied upon.
.SH EXAMPLES
.
.EX
(for-all even? '(3 1 4 1 5 9))
   => #f
(for-all even? '(2 4 14))
   => #t
(for-all even? '(2 4 14 . 9))
   => &assertion exception
(for-all (lambda (n) (and (even? n) n))
         '(2 4 14))
   => 14
(for-all < '(1 2 3) '(2 3 4))
   => #t
(for-all < '(1 2 4) '(2 3 4))
   => #f

(exists even? '(3 1 4 1 5 9))
   => #t
(exists even? '(3 1 1 5 9))
   => #f
(exists even? '(3 1 1 5 9 . 2))
   => &assertion exception
(exists (lambda (n) (and (even? n) n)) '(2 1 4 14))
   => 2
(exists < '(1 2 4) '(2 3 4))
   => #t
(exists > '(1 2 3) '(2 3 4))
   => #f

(exists values '(#f 42 #f))
   => 42
.EE
.
.SH "APPLICATION USAGE"
.
These procedures are used in code that needs to check if all or any
elements in list satisfies some condition. An example would be a
variadic procedure that checks if all its arguments are of a certain
type.
\" .SH RATIONALE
\" .
\" .SH COMPATIBILITY
\" .
.SH ERRORS
This procedure can raise exceptions with the following condition types:
.TP
.BR &assertion " (R6RS)"
The wrong number of arguments was passed or an argument was outside its domain.
In particular, if the lists are not empty then this will be raised if
.I proc
is not a procedure that takes the right number of arguments. It may be raised
if
.I proc
returns something other than a single value. It will be raised if the
lists are of different lengths and one of the lists is fully
traversed, or if traversal reaches a suffix of one of the list
arguments which is either not a chain of pairs or is circular.
.
.SH "SEE ALSO"
.
.BR or (7scheme),
.BR and (7scheme)
.SH STANDARDS
R6RS
.
.SH HISTORY
.
These procedures are new in R6RS. Similar procedures exist in SRFI-1
under the names
.B every
and
.BR any .
.SH AUTHORS
This page is part of the
.I scheme-manpages
project.
It includes materials from the RnRS documents.
More information can be found at
.UR https://github.com/schemedoc/manpages/
.UE .
\" .
\" .SH BUGS
\" .
