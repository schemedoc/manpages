.\" -*- mode: nroff; coding: utf-8 -*-
.\" Copyright © 2023 Göran Weinholt
.\" SPDX-License-Identifier: MIT
.TH get-bytevector-n! 3scheme 2023-01-31 "" "Scheme Programmer's Manual"
.SH NAME
get-bytevector-n!, read-bytevector! \- read bytes from a port into a bytevector
.
.SH LIBRARY
.nf
.BR "(import (rnrs))" "                     ;R6RS"
.BR "(import (rnrs io ports))" "            ;R6RS"
.BR "(import (scheme base))" "              ;R7RS"
.
.SH SYNOPSIS
.nf
;; R6RS
.BI "(get-bytevector-n! " binary-input-port " " bytevector " " start " " count )

;; R7RS
.BI "(read-bytevector! " bytevector )
.BI "(read-bytevector! " bytevector " " binary-input-port )
.BI "(read-bytevector! " bytevector " " binary-input-port " " start )
.BI "(read-bytevector! " bytevector " " binary-input-port " " start " " end )
.
.SH DESCRIPTION
.
Reads from
.IR binary-input-port ,
blocking as necessary, until
.I count
bytes are available from
.I binary-input-port
or until an end of file is reached. The return value depends on the
result of the read operation:
.IP \(bu 4n
If \fIcount\fP bytes are available before an end of file, they are
written into
.I bytevector
starting at index
.IR start ,
and the result is
.IR count .
.IP \(bu 4n
If fewer bytes are available
before the next end of file, the available bytes are written
into
.I bytevector
starting at index
.IR start ,
and the result is a number object representing the number of bytes
actually read.
.IP \(bu 4n
If an end of file is reached before any bytes are available, an
end-of-file object is returned.
.PP
The input port is updated to point just past the bytes read.
.
.TP
.B R7RS
The procedure call
\f[CR](read-bytevector! bv port start end)\fP
procedure is analogous to
\f[CR](get-bytevector-n! port bv start (- end start))\fP.
The argument
.I binary-input-port
defaults to the object returned by
.BR current-input-port (3scheme),
.I start
defaults to 0, and
.I end
defaults to the length of
.IR bytevector .
.
.TP
.B Multiple end-of-file conditions
The port may return an end-of-file object and then still keep
producing data if another read is attempted. Files do not normally
work this way, but it is possible for other types of ports to do so,
such as terminals. R6RS explicitly mentions this situation while R7RS
does not.
.
\" .SH "IMPLEMENTATION NOTES"
\" .
.SH "RETURN VALUES"
.
Returns a single value; an exact nonnegative integer, or an
end-of-file object.
.
.TP
.B R6RS
There is a single, unique end-of-file object.
.
.SH EXAMPLES
.
.EX
;; Apologies for the nonsensical example.
(call-with-port (open-file-input-port "/dev/zero")
  (lambda (p)
    (let ((bv (make-bytevector 4 1)))
      (get-bytevector-n! p bv 1 1)
      bv)))
        => #vu8(1 0 1 1)
.EE
.
.SH "APPLICATION USAGE"
.
This procedure is suitable when when you need to read binary data
directly into a buffer, which tends to be the case for some types of
binary structures. Other times it is more appropriate to use
.BR get-bytevector-n (3scheme),
which will automatically give you a bytevector limited to the
length of the data returned by the read operation.
\" .SH RATIONALE
\" .
\" .SH COMPATIBILITY
\" .
.SH ERRORS
This procedure can raise exceptions with the following condition types:
.TP
.BR &assertion " (R6RS)"
The wrong number of arguments was passed or an argument was outside its domain.
In particular,
.I start
and
.I count
must be exact, nonnegative integer objects,
and
.I bytevector
must be a mutable bytevector with at least
.IR start + count
elements.
.TP
.BR &i/o-read " (R6RS)"
There was an I/O error during the read operation.
.TP
.BR &i/o-port " (R6RS)"
This condition specifies the port object related to an
.B &i/o-read
condition.
.
.TP
R7RS
The assertions described above are errors.
Implementations may signal an error, extend the procedure's
domain of definition to include such arguments,
or fail catastrophically.
.
.SH "SEE ALSO"
.
.BR get-bytevector-n (3scheme),
.BR get-bytevector-some (3scheme),
.BR get-bytevector-all (3scheme),
.BR eof-object? (3scheme)
.
.SH STANDARDS
R6RS,
R7RS
.
.SH HISTORY
.
Reports prior to R6RS did not support binary I/O.
.
.SH AUTHORS
This page is part of the
.I scheme-manpages
project.
It includes materials from the RnRS documents.
More information can be found at
.UR https://github.com/schemedoc/manpages/
.UE .
.
.SH BUGS
.
The default port used by
.B read-bytevector!
is the current input port, which is normally a textual port that is
not expected to support binary I/O.
