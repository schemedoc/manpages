.\" -*- mode: nroff; coding: utf-8 -*-
.\" Copyright © 2023 Göran Weinholt
.\" SPDX-License-Identifier: MIT
.TH hashtable-entries 3scheme 2023-01-22 "" "Scheme Programmer's Manual"
.SH NAME
hashtable-entries \- get the entries in the hashtable as two vectors
.
.SH LIBRARY
.nf
.BR "(import (rnrs))" "                     ;R6RS"
.BR "(import (rnrs hashtables))" "          ;R6RS"
.
.SH SYNOPSIS
.nf
.BI "(hashtable-entries " hashtable )
.
.SH DESCRIPTION
Returns a vector of the keys in
.I hashtable
and a vector of the corresponding values.
.
\" .SH "IMPLEMENTATION NOTES"
\" .
.SH "RETURN VALUES"
.
Returns two values; two vectors of equal length.
.
.SH EXAMPLES
.
.EX
(let ((h (make-eqv-hashtable)))
  (hashtable-set! h 1 'one)
  (hashtable-set! h 2 'two)
  (hashtable-set! h 3 'three)
  (hashtable-entries h))
    => #(1 2 3)
       #(one two three)
            ; entries may be in different order
.EE
.
.SH "APPLICATION USAGE"
.
This procedure is used when iterating over the entries of a hashtable
in an indeterminate order or when you need all the associated values
from a hashtable.
.
.SH RATIONALE
.
If a program needs all entries in a hashtable then this procedure is
significantly faster than using
.BR hashtable-keys (3scheme)
together with
.BR hashtable-ref (3scheme)
for each key, because it does not need to use the hash and equal
functions.
.SH COMPATIBILITY
.
This procedure is unique to R6RS. An equivalent procedure can be
found in SRFI-125 under the name
.BR hash-table-entries .
.
.SH ERRORS
This procedure can raise exceptions with the following condition types:
.TP
.BR &assertion " (R6RS)"
The wrong number of arguments was passed or an argument was outside its domain.
.
.SH "SEE ALSO"
.
.BR hashtable-keys (3scheme)
.SH STANDARDS
R6RS
.
.SH HISTORY
.
This procedure first appeared in R6RS.
.
.SH AUTHORS
This page is part of the
.I scheme-manpages
project.
It includes materials from the RnRS documents.
More information can be found at
.UR https://github.com/schemedoc/manpages/
.UE .
\" .
\" .SH BUGS
\" .
