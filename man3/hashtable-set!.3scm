.\" -*- mode: nroff; coding: utf-8 -*-
.\" Copyright (c) 2023 Gwen Weinholt
.\" SPDX-License-Identifier: MIT
.TH hashtable-set! 3scm 2023-01-22 "" "Scheme Programmer's Manual"
.SH NAME
hashtable-set! \- change an association in a hashtable
.
.SH LIBRARY
.nf
.BR "(import (rnrs))" "                     ;R6RS"
.BR "(import (rnrs hashtables))" "          ;R6RS"
.
.SH SYNOPSIS
.nf
.BI "(hashtable-set! " hashtable " " key " " obj )
.
.SH DESCRIPTION
Changes
.I hashtable
to associate key with
.IR obj ,
adding a new
association or replacing any existing association for
.IR key .
.
.SH "IMPLEMENTATION NOTES"
.
This procedure can trigger growth of the hashtable, which can require
all keys to be hashed again.
.
.SH "RETURN VALUES"
.
Returns unspecified values.
.
.SH EXAMPLES
.
.EX
(define ht (make-eq-hashtable))
(hashtable-set! ht 'foo 'bar)
(hashtable-ref ht 'foo #f)   =>  bar
.EE
.
\" .SH "APPLICATION USAGE"
\" .
\" .SH RATIONALE
\" .
.SH COMPATIBILITY
.
This procedure is unique to R6RS. Similar procedures exist in
SRFI-69 and SRFI-125.
.
.SH ERRORS
This procedure can raise exceptions with the following condition types:
.TP
.BR &assertion " (R6RS)"
The wrong number of arguments was passed or an argument was outside its domain.
In particular,
.I hashtable
should be a hashtable and
.I key
should be in the domain of the hashtable's hash and equal functions.
.
.SH "SEE ALSO"
.
.BR make-hashtable (3scm),
.BR hashtable-ref (3scm)
.SH STANDARDS
R6RS
.
.SH HISTORY
.
This procedure first appeared in R6RS. An equivalent procedure already
existed in SRFI-69 under the name
.BR hash-table-set! .
.
.SH AUTHORS
This page is part of the
.I scheme-manpages
project.
It includes materials from the RnRS documents.
More information can be found at
.UR https://github.com/schemedoc/manpages/
.UE .
\" .
\" .SH BUGS
\" .
