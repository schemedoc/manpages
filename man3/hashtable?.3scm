.\" -*- mode: nroff; coding: utf-8 -*-
.\" Copyright (c) 2022 G. Weinholt
.\" SPDX-License-Identifier: MIT
.TH hashtable? 3scm 2022-03-29 "" "Scheme Programmer's Manual"
.SH NAME
hashtable? \- check if an object is a hashtable
.
.SH LIBRARY
.nf
.BR "(import (rnrs))" "                     ;R6RS"
.BR "(import (rnrs hashtables))" "          ;R6RS"
.
.SH SYNOPSIS
.nf
.BI "(hashtable? " obj )
.
.SH DESCRIPTION
Returns
.B #t
if
.I obj
is a hashtable,
.B #f
otherwise.
.
\" .SH "IMPLEMENTATION NOTES"
\" .
.SH "RETURN VALUES"
.
Returns a single boolean object.
.SH EXAMPLES
.
.EX
(hashtable? (make-eq-hashtable))  =>  #t
(hashtable? '())                  =>  #f
.EE
.
\" .SH "APPLICATION USAGE"
\" .
\" .SH RATIONALE
\" .
\" .SH COMPATIBILITY
\" .
.SH ERRORS
This procedure can raise exceptions with the following condition types:
.TP
.BR &assertion " (R6RS)"
The wrong number of arguments was passed or an argument was outside its domain.
.
.SH "SEE ALSO"
.
.BR make-hashtable (3scm)
.SH STANDARDS
R6RS,
SRFI-126
.
.SH HISTORY
.
This procedure is new in R6RS. The most common hashtable library
in Scheme before R6RS was SRFI-69.
.SH AUTHORS
This page is part of the
.I scheme-manpages
project.
It includes materials from the RnRS documents.
More information can be found at
.UR https://github.com/schemedoc/manpages/
.UE .
\" .
\" .SH BUGS
\" .
