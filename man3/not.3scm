.\" -*- mode: nroff; coding: utf-8 -*-
.\" Copyright (c) 2022 Gwen Weinholt
.\" SPDX-License-Identifier: MIT
.TH not 3scm 2022-05-07 "" "Scheme Programmer's Manual"
.SH NAME
not \- boolean negation
.
.SH LIBRARY
.nf
.BR "(import (rnrs))" "                     ;R6RS"
.BR "(import (rnrs base))" "                ;R6RS"
.BR "(import (scheme r5rs))" "              ;R7RS"
.BR "(import (scheme base))" "              ;R7RS"
.
.SH SYNOPSIS
.nf
.BI "(not " obj )
.
.SH DESCRIPTION
Returns
.B #t
if
.I obj
is false, and returns
.I #f
otherwise.
\" .
\" .SH "IMPLEMENTATION NOTES"
\" .
.SH "RETURN VALUES"
.
Returns a single value; a boolean.
.
.SH EXAMPLES
.
.EX
(not #t)         =>  #f
(not 3)          =>  #f
(not (list 3))   =>  #f
(not #f)         =>  #t
(not '())        =>  #f
(not (list))     =>  #f
(not 'nil)       =>  #f
.EE
.
\" .SH "APPLICATION USAGE"
\" .
\" .SH RATIONALE
\" .
.SH COMPATIBILITY
.
This procedure works the same in all Schemes.
.
.SH ERRORS
This procedure can raise exceptions with the following condition types:
.TP
.BR &assertion " (R6RS)"
The wrong number of arguments was passed.
.TP
R7RS
The assertions described above are errors.
Implementations may signal an error, extend the procedure's
domain of definition to include such arguments,
or fail catastrophically.
.
.SH "SEE ALSO"
.
.BR if (7scm),
.BR boolean=? (3scm)
.
.SH STANDARDS
R4RS,
IEEE Scheme,
R5RS,
R6RS,
R7RS
.
.SH HISTORY
.
The
.B not
function has been in Scheme since the beginning, even when it ran on
MacLisp, and it was also present in LISP 1.5.
.
.SH AUTHORS
This page is part of the
.I scheme-manpages
project.
It includes materials from the RnRS documents.
More information can be found at
.UR https://github.com/schemedoc/manpages/
.UE .
\" .
\" .SH BUGS
\" .
