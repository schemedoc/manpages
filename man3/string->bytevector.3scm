.\" -*- mode: nroff; coding: utf-8 -*-
.\" Copyright © 2022 Göran Weinholt
.\" SPDX-License-Identifier: MIT
.TH string->bytevector 3scm 2022-05-14 "" "Scheme Programmer's Manual"
.SH NAME
string->bytevector \- transcode a string to a bytevector
.
.SH LIBRARY
.nf
.BR "(import (rnrs))" "                     ;R6RS"
.BR "(import (rnrs io ports))" "            ;R6RS"
.
.SH SYNOPSIS
.nf
.BI "(string->bytevector " string " " transcoder )
.
.SH DESCRIPTION
Returns the bytevector that results from transcoding
.I string
according to the output direction of
.IR transcoder .
.
\" .SH "IMPLEMENTATION NOTES"
\" .
.SH "RETURN VALUES"
.
Returns a single value; a bytevector.
.SH EXAMPLES
.
.EX
(string->bytevector "Quux" (native-transcoder))
        => #vu8(81 117 117 120)

string->bytevector "€"
                   (make-transcoder (latin-1-codec)
                                    (native-eol-style)
                                    (error-handling-mode raise)))
        => &i/o-encoding
.EE
.
.SH "APPLICATION USAGE"
.
This procedure is a more general alternative to
.BR string->utf8 (3scm).
\" .SH RATIONALE
\" .
.SH COMPATIBILITY
.
This procedure is unique to R6RS.
.SH ERRORS
This procedure can raise exceptions with the following condition types:
.TP
.BR &assertion " (R6RS)"
The wrong number of arguments was passed or an argument was outside its domain.
.TP
.BR &i/o-encoding " (R6RS)"
A character was encountered that could not be translated into bytes,
and
.IR transcoder 's
error-handling-mode is \f[CR]raise\fP.
.
.SH "SEE ALSO"
.
.BR bytevector->string (3scm),
.BR string->utf8 (3scm),
.BR open-transcoder (3scm),
.SH STANDARDS
R6RS
.
.SH HISTORY
.
This procedure first appeared in R6RS as part of the redesigned I/O
system.
.SH AUTHORS
This page is part of the
.I scheme-manpages
project.
It includes materials from the RnRS documents.
More information can be found at
.UR https://github.com/schemedoc/manpages/
.UE .
\" .
\" .SH BUGS
\" .
